{"ast":null,"code":"var _jsxFileName = \"/Users/cristian-perdomo/Desktop/development/remittance/client/src/pages/IndexPage/IndexPage.jsx\",\n    _s = $RefreshSig$();\n\nimport apiService from '../../services/api.service';\nimport { useState } from 'react';\nimport { Container, Form, FormControl, Button, Col, Row } from 'react-bootstrap';\nimport '../IndexPage/indexPage.css';\nimport countries from '../../countries.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst IndexPage = () => {\n  _s();\n\n  const [input, setInput] = useState({\n    sourceCurrency: \"\",\n    targetCurrency: \"\",\n    sendAmount: ''\n  });\n  const [sourceCountry, setSourceCountry] = useState(countries);\n  const [sourceCountrySearch, setSourceCountrySearch] = useState(countries);\n  const [source, setSource] = useState();\n  const {\n    sourceCurrency,\n    targetCurrency,\n    sendAmount\n  } = input;\n\n  const handleInput = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setInput({ ...input,\n      [name]: value\n    });\n    setSourceCountry(e.target.value);\n    countrySearch();\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    oneCall();\n  };\n\n  const countrySearch = e => {\n    setSourceCountrySearch();\n    console.log(sourceCountrySearch);\n  };\n\n  const oneCall = () => {\n    apiService.getInput(sourceCurrency, targetCurrency, sendAmount).then(_ref => {\n      let {\n        data\n      } = _ref;\n      setSource(data.providers);\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      className: \"input\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"d-flex mb-3 mt-5\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          id: \"sourceCurrency\",\n          type: \"search\",\n          placeholder: \"Moneda de origen\",\n          name: \"sourceCurrency\",\n          \"aria-label\": \"Search\",\n          value: sourceCurrency,\n          onChange: handleInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          id: \"targetCurrency\",\n          type: \"search\",\n          placeholder: \"Moneda de destino\",\n          name: \"targetCurrency\",\n          \"aria-label\": \"Search\",\n          value: targetCurrency,\n          onChange: handleInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          id: \"sendAmount\",\n          type: \"number\",\n          placeholder: \"Cantidad a enviar\",\n          name: \"sendAmount\",\n          value: sendAmount,\n          onChange: handleInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"form-button\",\n          type: \"submit\",\n          children: \"Buscar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Env\\xEDo de dinero al exterior\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Moneda enviada: \", sourceCurrency]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Moneda recibida: \", targetCurrency]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Cantidad a enviar: \", sendAmount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Entre las distintas opciones que encontramos, te ofrecemos estas:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), source === null || source === void 0 ? void 0 : source.map(provider => {\n        const {\n          name,\n          type,\n          logos,\n          quotes\n        } = provider;\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            className: \"justify-content-center text-center\",\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"logos\",\n                src: logos.normal.pngUrl\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [type, \": \", name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              className: \"mt-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"tipo de cambio: \", quotes[0].rate, \" \", targetCurrency]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"comisi\\xF3n: \", quotes[0].fee, \" \", sourceCurrency]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"cantidad recibida: \", quotes[0].receivedAmount, \" \", targetCurrency]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(IndexPage, \"8b9ODx82/tiUoWZsElfE8K+CW1o=\");\n\n_c = IndexPage;\nexport default IndexPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"IndexPage\");","map":{"version":3,"sources":["/Users/cristian-perdomo/Desktop/development/remittance/client/src/pages/IndexPage/IndexPage.jsx"],"names":["apiService","useState","Container","Form","FormControl","Button","Col","Row","countries","IndexPage","input","setInput","sourceCurrency","targetCurrency","sendAmount","sourceCountry","setSourceCountry","sourceCountrySearch","setSourceCountrySearch","source","setSource","handleInput","e","name","value","target","countrySearch","handleSubmit","preventDefault","oneCall","console","log","getInput","then","data","providers","catch","err","map","provider","type","logos","quotes","normal","pngUrl","rate","fee","receivedAmount"],"mappings":"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","sourcesContent":["import apiService from '../../services/api.service'\nimport { useState } from 'react'\nimport { Container, Form, FormControl, Button, Col, Row } from 'react-bootstrap'\nimport '../IndexPage/indexPage.css'\nimport countries from '../../countries.json'\n\nconst IndexPage = () => {\n    const [input, setInput] = useState({\n        sourceCurrency: \"\",\n        targetCurrency: \"\",\n        sendAmount: ''\n    })\n\n    const [sourceCountry, setSourceCountry] = useState(countries)\n    const [sourceCountrySearch, setSourceCountrySearch] = useState(countries)\n    const [source, setSource] = useState()\n\n    const { sourceCurrency, targetCurrency, sendAmount } = input\n\n    const handleInput = e => {\n        const { name, value } = e.target\n        setInput({ ...input, [name]: value })\n        setSourceCountry(e.target.value)\n        countrySearch()\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        oneCall()\n    }\n    const countrySearch = (e) => {\n        setSourceCountrySearch()\n        console.log(sourceCountrySearch)\n    }\n\n    const oneCall = () => {\n        apiService\n            .getInput(sourceCurrency, targetCurrency, sendAmount)\n            .then(({ data }) => {\n                setSource(data.providers)\n            })\n            .catch(err => console.log(err))\n    }\n    return (\n\n        <>\n            {/* <h2>Prueba de paises</h2>\n\n            {countries?.map(country => {\n                const { name, flag } = country\n                return (\n                    <>\n                        <h3>Nombre del pais: {name}</h3>\n                        <img src={`data:image/png;base64, ${flag}`} />\n                    </>\n                )\n            })\n            } */}\n\n            <Container className=\"input\">\n                <Form className=\"d-flex mb-3 mt-5\" onSubmit={handleSubmit}>\n                    <FormControl\n                        id=\"sourceCurrency\"\n                        type=\"search\"\n                        placeholder=\"Moneda de origen\"\n                        name='sourceCurrency'\n                        aria-label=\"Search\"\n                        value={sourceCurrency}\n                        onChange={handleInput}\n                    />\n                    <FormControl\n                        id=\"targetCurrency\"\n                        type=\"search\"\n                        placeholder=\"Moneda de destino\"\n                        name='targetCurrency'\n                        aria-label=\"Search\"\n                        value={targetCurrency}\n                        onChange={handleInput}\n                    />\n                    <FormControl\n                        id=\"sendAmount\"\n                        type=\"number\"\n                        placeholder=\"Cantidad a enviar\"\n                        name='sendAmount'\n                        value={sendAmount}\n                        onChange={handleInput}\n                    />\n                    <Button className=\"form-button\" type=\"submit\">Buscar</Button>\n                </Form >\n\n            </Container >\n            <Container>\n                <h1>Envío de dinero al exterior</h1>\n                <p>Moneda enviada: {sourceCurrency}</p>\n                <p>Moneda recibida: {targetCurrency}</p>\n                <p>Cantidad a enviar: {sendAmount}</p>\n                <hr />\n                <h2>Entre las distintas opciones que encontramos, te ofrecemos estas:</h2>\n\n                {\n                    source?.map(provider => {\n                        const { name, type, logos, quotes } = provider\n\n                        return <>\n                            <Row className=\"justify-content-center text-center\">\n\n                                <Col >\n                                    <img className='logos' src={logos.normal.pngUrl} />\n                                    <p>{type}: {name}</p>\n                                </Col>\n                                <Col className='mt-3' >\n                                    <p>tipo de cambio: {quotes[0].rate} {targetCurrency}</p>\n                                    <p>comisión: {quotes[0].fee} {sourceCurrency}</p>\n                                    <p>cantidad recibida: {quotes[0].receivedAmount} {targetCurrency}</p>\n                                </Col>\n                            </Row>\n\n                            <hr />\n                        </>\n                    })\n                }\n\n            </Container>\n\n        </>\n    )\n\n}\nexport default IndexPage"]},"metadata":{},"sourceType":"module"}