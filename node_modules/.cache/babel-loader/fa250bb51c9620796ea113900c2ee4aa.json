{"ast":null,"code":"var _jsxFileName = \"/Users/cristian-perdomo/Desktop/development/remittance/client/src/pages/IndexPage/IndexPage.jsx\",\n    _s = $RefreshSig$();\n\nimport apiService from '../../services/api.service';\nimport { useState, useEffect } from 'react';\nimport { Container, Form, FormControl, Button } from 'react-bootstrap'; // import { useParams } from 'react-router-dom'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst IndexPage = () => {\n  _s();\n\n  const [input, setInput] = useState({\n    sourceCurrency: \"\",\n    targetCurrency: \"\",\n    sendAmount: 0\n  });\n  const [source, setSource] = useState('');\n  const {\n    sourceCurrency,\n    targetCurrency,\n    sendAmount\n  } = input;\n  useEffect(() => {\n    oneCall();\n  }, []);\n\n  const handleInput = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setInput({ ...input,\n      [name]: value\n    });\n  };\n\n  const oneCall = () => {\n    // setSource(e.target.value)\n    apiService.getInput(sourceCurrency, targetCurrency, sendAmount).then(_ref => {\n      let {\n        data\n      } = _ref;\n      setSource(data);\n      console.log(data);\n    }).catch(err => console.log(err));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    apiService.getInput(sourceCurrency, targetCurrency, sendAmount).then(_ref2 => {\n      let {\n        data\n      } = _ref2;\n      setSource(data);\n      console.log(data);\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      className: \"input\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"d-flex mb-3 mt-5\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          id: \"sourceCurrency\",\n          type: \"text\",\n          placeholder: \"Pa\\xEDs de origen\",\n          name: \"sourceCurrency\",\n          value: sourceCurrency,\n          onChange: handleInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          id: \"targetCurrency\",\n          type: \"text\",\n          placeholder: \"Pa\\xEDs de destino\",\n          name: \"targetCurrency\",\n          value: targetCurrency,\n          onChange: handleInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          id: \"sendAmount\",\n          type: \"number\",\n          placeholder: \"Cantidad a enviar\",\n          name: \"sendAmount\",\n          value: sendAmount,\n          onChange: handleInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"form-button\",\n          type: \"submit\",\n          children: \"Buscar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [\"const \", (name, type, quotes), \" = provider\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(IndexPage, \"xhLySRVkQcLZxg9xHJSzP12xIAY=\");\n\n_c = IndexPage;\nexport default IndexPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"IndexPage\");","map":{"version":3,"sources":["/Users/cristian-perdomo/Desktop/development/remittance/client/src/pages/IndexPage/IndexPage.jsx"],"names":["apiService","useState","useEffect","Container","Form","FormControl","Button","IndexPage","input","setInput","sourceCurrency","targetCurrency","sendAmount","source","setSource","oneCall","handleInput","e","name","value","target","getInput","then","data","console","log","catch","err","handleSubmit","preventDefault","type","quotes"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,4BAAvB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,WAA1B,EAAuCC,MAAvC,QAAqD,iBAArD,C,CACA;;;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC;AAC/BS,IAAAA,cAAc,EAAE,EADe;AAE/BC,IAAAA,cAAc,EAAE,EAFe;AAG/BC,IAAAA,UAAU,EAAE;AAHmB,GAAD,CAAlC;AAMA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAM;AAAES,IAAAA,cAAF;AAAkBC,IAAAA,cAAlB;AAAkCC,IAAAA;AAAlC,MAAiDJ,KAAvD;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,OAAO;AACV,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMC,WAAW,GAAGC,CAAC,IAAI;AACrB,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAX,IAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAY,OAACU,IAAD,GAAQC;AAApB,KAAD,CAAR;AAEH,GAJD;;AAKA,QAAMJ,OAAO,GAAG,MAAM;AAClB;AACAf,IAAAA,UAAU,CACLqB,QADL,CACcX,cADd,EAC8BC,cAD9B,EAC8CC,UAD9C,EAEKU,IAFL,CAEU,QAAc;AAAA,UAAb;AAAEC,QAAAA;AAAF,OAAa;AAChBT,MAAAA,SAAS,CAACS,IAAD,CAAT;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACH,KALL,EAMKG,KANL,CAMWC,GAAG,IAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CANlB;AAQH,GAVD;;AAYA,QAAMC,YAAY,GAAGX,CAAC,IAAI;AACtBA,IAAAA,CAAC,CAACY,cAAF;AACA7B,IAAAA,UAAU,CACLqB,QADL,CACcX,cADd,EAC8BC,cAD9B,EAC8CC,UAD9C,EAEKU,IAFL,CAEU,SAAc;AAAA,UAAb;AAAEC,QAAAA;AAAF,OAAa;AAChBT,MAAAA,SAAS,CAACS,IAAD,CAAT;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACH,KALL,EAMKG,KANL,CAMWC,GAAG,IAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CANlB;AAOH,GATD;;AAYA,sBAEI;AAAA,4BACI,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,OAArB;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,kBAAhB;AAAmC,QAAA,QAAQ,EAAEC,YAA7C;AAAA,gCACI,QAAC,WAAD;AACI,UAAA,EAAE,EAAC,gBADP;AAEI,UAAA,IAAI,EAAC,MAFT;AAGI,UAAA,WAAW,EAAC,mBAHhB;AAII,UAAA,IAAI,EAAC,gBAJT;AAKI,UAAA,KAAK,EAAElB,cALX;AAMI,UAAA,QAAQ,EAAEM;AANd;AAAA;AAAA;AAAA;AAAA,gBADJ,eASI,QAAC,WAAD;AACI,UAAA,EAAE,EAAC,gBADP;AAEI,UAAA,IAAI,EAAC,MAFT;AAGI,UAAA,WAAW,EAAC,oBAHhB;AAII,UAAA,IAAI,EAAC,gBAJT;AAKI,UAAA,KAAK,EAAEL,cALX;AAMI,UAAA,QAAQ,EAAEK;AANd;AAAA;AAAA;AAAA;AAAA,gBATJ,eAiBI,QAAC,WAAD;AACI,UAAA,EAAE,EAAC,YADP;AAEI,UAAA,IAAI,EAAC,QAFT;AAGI,UAAA,WAAW,EAAC,mBAHhB;AAII,UAAA,IAAI,EAAC,YAJT;AAKI,UAAA,KAAK,EAAEJ,UALX;AAMI,UAAA,QAAQ,EAAEI;AANd;AAAA;AAAA;AAAA;AAAA,gBAjBJ,eAyBI,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAC,aAAlB;AAAgC,UAAA,IAAI,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eA+BI,QAAC,SAAD;AAAA,4BAGWE,IAAI,EAAEY,IAAF,EAAQC,MAHvB;AAAA;AAAA;AAAA;AAAA;AAAA,YA/BJ;AAAA,kBAFJ;AAiEH,CA7GD;;GAAMxB,S;;KAAAA,S;AA8GN,eAAeA,SAAf","sourcesContent":["import apiService from '../../services/api.service'\nimport { useState, useEffect } from 'react'\nimport { Container, Form, FormControl, Button } from 'react-bootstrap'\n// import { useParams } from 'react-router-dom'\n\nconst IndexPage = () => {\n    const [input, setInput] = useState({\n        sourceCurrency: \"\",\n        targetCurrency: \"\",\n        sendAmount: 0\n    })\n\n    const [source, setSource] = useState('')\n\n    const { sourceCurrency, targetCurrency, sendAmount } = input\n\n    useEffect(() => {\n        oneCall()\n    }, [])\n\n    const handleInput = e => {\n        const { name, value } = e.target\n        setInput({ ...input, [name]: value })\n\n    }\n    const oneCall = () => {\n        // setSource(e.target.value)\n        apiService\n            .getInput(sourceCurrency, targetCurrency, sendAmount)\n            .then(({ data }) => {\n                setSource(data)\n                console.log(data)\n            })\n            .catch(err => console.log(err))\n\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        apiService\n            .getInput(sourceCurrency, targetCurrency, sendAmount)\n            .then(({ data }) => {\n                setSource(data)\n                console.log(data)\n            })\n            .catch(err => console.log(err))\n    }\n\n\n    return (\n\n        <>\n            <Container className=\"input\">\n                <Form className=\"d-flex mb-3 mt-5\" onSubmit={handleSubmit}>\n                    <FormControl\n                        id=\"sourceCurrency\"\n                        type=\"text\"\n                        placeholder=\"País de origen\"\n                        name='sourceCurrency'\n                        value={sourceCurrency}\n                        onChange={handleInput}\n                    />\n                    <FormControl\n                        id=\"targetCurrency\"\n                        type=\"text\"\n                        placeholder=\"País de destino\"\n                        name='targetCurrency'\n                        value={targetCurrency}\n                        onChange={handleInput}\n                    />\n                    <FormControl\n                        id=\"sendAmount\"\n                        type=\"number\"\n                        placeholder=\"Cantidad a enviar\"\n                        name='sendAmount'\n                        value={sendAmount}\n                        onChange={handleInput}\n                    />\n                    <Button className=\"form-button\" type=\"submit\">Buscar</Button>\n                </Form >\n\n            </Container >\n            <Container>\n                \n\n                const {name, type, quotes} = provider\n\n            </Container>\n            {/* <br />\n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n\n            <h1>Indexpage funcional</h1>\n            <p>Prueba enviando 1000 euros a méxico</p>\n            {\n                input.map(provider => {\n                    const { name, type, quotes } = provider\n                    return <>\n                        <p>{type}: {name}</p>\n                        <p>tipo de cambio: {quotes[0].rate} mxn</p>\n                        <p>comisión: {quotes[0].fee} euros</p>\n                        <p>cantidad recibida: {quotes[0].receivedAmount} mxn</p>\n                        <hr />\n                    </>\n                })\n            } */}\n        </>\n    )\n\n}\nexport default IndexPage"]},"metadata":{},"sourceType":"module"}