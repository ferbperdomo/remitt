{"ast":null,"code":"var _jsxFileName = \"/Users/cristian-perdomo/Desktop/development/remittance/client/src/pages/IndexPage/IndexPage.jsx\",\n    _s = $RefreshSig$();\n\nimport apiService from '../../services/api.service';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst IndexPage = () => {\n  _s();\n\n  const [input, setInput] = useState([]);\n  useEffect(() => {\n    oneCall();\n  }, []);\n\n  const oneCall = () => {\n    apiService.getInput().then(_ref => {\n      let {\n        data\n      } = _ref;\n      console.log(data.providers);\n      setInput(data.providers);\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Indexpage funcional\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), input.map(provider => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [provider.type, \": \", provider.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"rate: \", provider.quotes[0].rate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"fee: \", provider.quotes[0].fee]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"cantidad recibida: \", provider.quotes[0].receivedAmount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true);\n    })]\n  }, void 0, true);\n};\n\n_s(IndexPage, \"9SLigOjmjIkDcht3EK2Odlc+mcg=\");\n\n_c = IndexPage;\nexport default IndexPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"IndexPage\");","map":{"version":3,"sources":["/Users/cristian-perdomo/Desktop/development/remittance/client/src/pages/IndexPage/IndexPage.jsx"],"names":["apiService","useState","useEffect","IndexPage","input","setInput","oneCall","getInput","then","data","console","log","providers","catch","err","map","provider","type","name","quotes","rate","fee","receivedAmount"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,4BAAvB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,OAAO;AACV,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,OAAO,GAAG,MAAM;AAClBN,IAAAA,UAAU,CACLO,QADL,GAEKC,IAFL,CAEU,QAAc;AAAA,UAAb;AAAEC,QAAAA;AAAF,OAAa;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,SAAjB;AACAP,MAAAA,QAAQ,CAACI,IAAI,CAACG,SAAN,CAAR;AACH,KALL,EAMKC,KANL,CAMWC,GAAG,IAAIJ,OAAO,CAACC,GAAR,CAAYG,GAAZ,CANlB;AAOH,GARD;;AAYA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAIQV,KAAK,CAACW,GAAN,CAAUC,QAAQ,IAAI;AAClB,0BAAO;AAAA,gCACH;AAAA,qBAAIA,QAAQ,CAACC,IAAb,QAAqBD,QAAQ,CAACE,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,gBADG,eAEH;AAAA,+BAAUF,QAAQ,CAACG,MAAT,CAAgB,CAAhB,EAAmBC,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFG,eAGH;AAAA,8BAASJ,QAAQ,CAACG,MAAT,CAAgB,CAAhB,EAAmBE,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHG,eAIH;AAAA,4CAAuBL,QAAQ,CAACG,MAAT,CAAgB,CAAhB,EAAmBG,cAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJG;AAAA,sBAAP;AAMH,KAPD,CAJR;AAAA,kBADJ;AAiBH,CApCD;;GAAMnB,S;;KAAAA,S;AAqCN,eAAeA,SAAf","sourcesContent":["import apiService from '../../services/api.service'\nimport { useState, useEffect } from 'react'\n\nconst IndexPage = () => {\n    const [input, setInput] = useState([])\n\n    useEffect(() => {\n        oneCall()\n    }, [])\n\n    const oneCall = () => {\n        apiService\n            .getInput()\n            .then(({ data }) => {\n                console.log(data.providers)\n                setInput(data.providers)\n            })\n            .catch(err => console.log(err))\n    }\n\n\n\n    return (\n        <>\n            <h1>Indexpage funcional</h1>\n            \n            {\n                input.map(provider => {\n                    return <>\n                        <p>{provider.type}: {provider.name}</p>\n                        <p>rate: {provider.quotes[0].rate}</p>\n                        <p>fee: {provider.quotes[0].fee}</p>\n                        <p>cantidad recibida: {provider.quotes[0].receivedAmount}</p>\n                    </>\n                })\n            }\n        </>\n    )\n\n}\nexport default IndexPage"]},"metadata":{},"sourceType":"module"}