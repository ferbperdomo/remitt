{"ast":null,"code":"var _jsxFileName = \"/Users/cristian-perdomo/Desktop/development/remittance/client/src/pages/IndexPage/IndexPage.jsx\",\n    _s = $RefreshSig$();\n\nimport apiService from '../../services/api.service';\nimport { useState, useEffect } from 'react';\nimport { Container, Form, FormControl, Button } from 'react-bootstrap';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst IndexPage = () => {\n  _s();\n\n  const [input, setInput] = useState({\n    sourceCurrency: \"\",\n    targetCurrency: \"\",\n    sendAmount: 0\n  });\n  const [source, setSource] = useState('');\n  const {\n    sourceCurrency,\n    targetCurrency,\n    sendAmount\n  } = useParams();\n  useEffect(() => {\n    oneCall();\n  }, []); // const oneCall = () => {\n  //     apiService\n  //         .getInput()\n  //         .then(({ data }) => {\n  //             setInput(data.providers)\n  //             console.log(data.providers)\n  //         })\n  //         .catch(err => console.log(err))\n  // }\n\n  const handleInput = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setSignupForm({ ...signupForm,\n      [name]: value\n    });\n    setSource(e.target.value);\n    apiService.getInput().then(_ref => {\n      let {\n        data\n      } = _ref;\n      setSource(data);\n      console.log(data);\n    }).catch(err => console.log(err));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      className: \"input\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"d-flex mb-3 mt-5\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          id: \"sourceCurrency\",\n          type: \"text\",\n          placeholder: \"Pa\\xEDs de origen\",\n          name: \"sourceCurrency\",\n          value: sourceCurrency,\n          onChange: handleInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          id: \"targetCurrency\",\n          type: \"text\",\n          placeholder: \"Pa\\xEDs de destino\",\n          name: \"targetCurrency\",\n          value: targetCurrency,\n          onChange: handleInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          id: \"sendAmount\",\n          type: \"number\",\n          placeholder: \"Cantidad a enviar\",\n          name: \"sendAmount\",\n          value: sendAmount,\n          onChange: handleInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"form-button\",\n          type: \"submit\",\n          children: \"Buscar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Indexpage funcional\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Prueba enviando 1000 euros a m\\xE9xico\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), input.map(provider => {\n      const {\n        name,\n        type,\n        quotes\n      } = provider;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [type, \": \", name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"tipo de cambio: \", quotes[0].rate, \" mxn\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"comisi\\xF3n: \", quotes[0].fee, \" euros\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"cantidad recibida: \", quotes[0].receivedAmount, \" mxn\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true);\n    })]\n  }, void 0, true);\n};\n\n_s(IndexPage, \"33S4L7cicHRaWpOHmVNMg2KWeT0=\", false, function () {\n  return [useParams];\n});\n\n_c = IndexPage;\nexport default IndexPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"IndexPage\");","map":{"version":3,"sources":["/Users/cristian-perdomo/Desktop/development/remittance/client/src/pages/IndexPage/IndexPage.jsx"],"names":["apiService","useState","useEffect","Container","Form","FormControl","Button","useParams","IndexPage","input","setInput","sourceCurrency","targetCurrency","sendAmount","source","setSource","oneCall","handleInput","e","name","value","target","setSignupForm","signupForm","getInput","then","data","console","log","catch","err","handleSubmit","preventDefault","map","provider","type","quotes","rate","fee","receivedAmount"],"mappings":"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","sourcesContent":["import apiService from '../../services/api.service'\nimport { useState, useEffect } from 'react'\nimport { Container, Form, FormControl, Button } from 'react-bootstrap'\nimport { useParams } from 'react-router-dom'\n\nconst IndexPage = () => {\n    const [input, setInput] = useState({\n        sourceCurrency: \"\",\n        targetCurrency: \"\",\n        sendAmount: 0,\n    })\n    const [source, setSource] = useState('')\n\n    const { sourceCurrency, targetCurrency, sendAmount } = useParams()\n\n    useEffect(() => {\n        oneCall()\n    }, [])\n\n    // const oneCall = () => {\n    //     apiService\n    //         .getInput()\n    //         .then(({ data }) => {\n    //             setInput(data.providers)\n    //             console.log(data.providers)\n    //         })\n    //         .catch(err => console.log(err))\n    // }\n    const handleInput = e => {\n        const { name, value } = e.target\n        setSignupForm({ ...signupForm, [name]: value })\n\n        setSource(e.target.value)\n        apiService\n            .getInput()\n            .then(({ data }) => {\n                setSource(data)\n                console.log(data)\n            })\n            .catch(err => console.log(err))\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault()\n    }\n\n\n    return (\n\n        <>\n            <Container className=\"input\">\n                <Form className=\"d-flex mb-3 mt-5\" onSubmit={handleSubmit}>\n                    <FormControl\n                        id=\"sourceCurrency\"\n                        type=\"text\"\n                        placeholder=\"País de origen\"\n                        name='sourceCurrency'\n                        value={sourceCurrency}\n                        onChange={handleInput}\n                    />\n                    <FormControl\n                        id=\"targetCurrency\"\n                        type=\"text\"\n                        placeholder=\"País de destino\"\n                        name='targetCurrency'\n                        value={targetCurrency}\n                        onChange={handleInput}\n                    />\n                    <FormControl\n                        id=\"sendAmount\"\n                        type=\"number\"\n                        placeholder=\"Cantidad a enviar\"\n                        name='sendAmount'\n                        value={sendAmount}\n                        onChange={handleInput}\n                    />\n                    <Button className=\"form-button\" type=\"submit\">Buscar</Button>\n                </Form >\n\n            </Container >\n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n\n            <h1>Indexpage funcional</h1>\n            <p>Prueba enviando 1000 euros a méxico</p>\n            {\n                input.map(provider => {\n                    const { name, type, quotes } = provider\n                    return <>\n                        <p>{type}: {name}</p>\n                        <p>tipo de cambio: {quotes[0].rate} mxn</p>\n                        <p>comisión: {quotes[0].fee} euros</p>\n                        <p>cantidad recibida: {quotes[0].receivedAmount} mxn</p>\n                        <hr />\n                    </>\n                })\n            }\n        </>\n    )\n\n}\nexport default IndexPage"]},"metadata":{},"sourceType":"module"}