{"ast":null,"code":"var _jsxFileName = \"/Users/cristian-perdomo/Desktop/development/remittance/client/src/pages/IndexPage/IndexPage.jsx\",\n    _s = $RefreshSig$();\n\nimport apiService from '../../services/api.service';\nimport { useState, useEffect } from 'react';\nimport { Container, Form, FormControl, Button } from 'react-bootstrap';\nimport '../IndexPage/indexPage.css';\nimport greenflow from '../../img/greenflow.png';\nimport pinkflow from '../../img/pinkflow.png';\nimport beigeflow from '../../img/beigeflow.png';\nimport countries from '../../countries.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst IndexPage = () => {\n  _s();\n\n  const [input, setInput] = useState({\n    sourceCurrency: \"\",\n    targetCurrency: \"\",\n    sendAmount: ''\n  });\n  const [sourceCountry, setSourceCountry] = useState();\n  const [targetCountry, setTargetCountry] = useState();\n  const {\n    sourceCurrency,\n    targetCurrency,\n    sendAmount\n  } = input;\n  const sendCountry = countries.find(country => country.name === sourceCurrency);\n  setSourceCountry(sendCountry.currency.code);\n  const receiveCountry = countries.find(country => country.name === targetCurrency);\n  setTargetCountry(receiveCountry.currency.code); // useEffect(() => {\n  // }, [input.country])\n\n  const handleInput = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setInput({ ...input,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    oneCall();\n  }; // const oneCall = () => {\n  //     const sendCountry = countries.find(country => country.name === sourceCurrency)\n  //     setSourceCountry(sendCountry.currency.code)\n  //     const receiveCountry = countries.find(country => country.name === targetCurrency)\n  //     setTargetCountry(receiveCountry.currency.code)\n  //     console.log('pais que envía', sendCountry)\n  //     console.log('currency del que envía', sendCountry.currency.code)\n  //     console.log('pais que recibe', receiveCountry)\n  //     console.log('currency del que recibe', receiveCountry.currency.code)\n  //     console.log('input', input)\n  //     apiCall()\n  // }\n\n\n  const apiCall = () => {\n    console.log('sourcecountry', sourceCountry);\n    console.log('targetcountry', targetCountry);\n    console.log('sendamount', sendAmount);\n    apiService.getInput(sendCountry, receiveCountry, sendAmount).then(_ref => {\n      let {\n        data\n      } = _ref;\n      setSourceCountry(data.providers);\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"title\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Env\\xEDo de dinero al exterior\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"greenflow\",\n        src: greenflow,\n        alt: \"testing color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"pinkflow\",\n        src: pinkflow,\n        alt: \"testing color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"beigeflow\",\n        src: beigeflow,\n        alt: \"testing color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"input mb-5\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"mb-3 mt-5\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          id: \"sourcecountry\",\n          type: \"search\",\n          placeholder: \"Remitente\",\n          name: \"sourceCurrency\",\n          \"aria-label\": \"Search\",\n          value: sourceCountry,\n          onChange: handleInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          id: \"targetCurrency\",\n          type: \"search\",\n          placeholder: \"Destinatario\",\n          name: \"targetCurrency\",\n          \"aria-label\": \"Search\",\n          value: targetCountry,\n          onChange: handleInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          id: \"sendAmount\",\n          type: \"number\",\n          placeholder: \"Cantidad a enviar\",\n          name: \"sendAmount\",\n          value: sendAmount,\n          onChange: handleInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n\n_s(IndexPage, \"wFIeWtns51UPlFz1jZl/xM1bqv0=\");\n\n_c = IndexPage;\nexport default IndexPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"IndexPage\");","map":{"version":3,"sources":["/Users/cristian-perdomo/Desktop/development/remittance/client/src/pages/IndexPage/IndexPage.jsx"],"names":["apiService","useState","useEffect","Container","Form","FormControl","Button","greenflow","pinkflow","beigeflow","countries","IndexPage","input","setInput","sourceCurrency","targetCurrency","sendAmount","sourceCountry","setSourceCountry","targetCountry","setTargetCountry","sendCountry","find","country","name","currency","code","receiveCountry","handleInput","e","value","target","handleSubmit","preventDefault","oneCall","apiCall","console","log","getInput","then","data","providers","catch","err"],"mappings":"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","sourcesContent":["import apiService from '../../services/api.service'\nimport { useState, useEffect } from 'react'\nimport { Container, Form, FormControl, Button } from 'react-bootstrap'\nimport '../IndexPage/indexPage.css'\nimport greenflow from '../../img/greenflow.png'\nimport pinkflow from '../../img/pinkflow.png'\nimport beigeflow from '../../img/beigeflow.png'\nimport countries from '../../countries.json'\n\nconst IndexPage = () => {\n    const [input, setInput] = useState({\n        sourceCurrency: \"\",\n        targetCurrency: \"\",\n        sendAmount: ''\n    })\n\n    const [sourceCountry, setSourceCountry] = useState()\n    const [targetCountry, setTargetCountry] = useState()\n    const { sourceCurrency, targetCurrency, sendAmount } = input\n    const sendCountry = countries.find(country => country.name === sourceCurrency)\n    setSourceCountry(sendCountry.currency.code)\n\n    const receiveCountry = countries.find(country => country.name === targetCurrency)\n    setTargetCountry(receiveCountry.currency.code)\n\n    // useEffect(() => {\n\n    // }, [input.country])\n\n\n    const handleInput = e => {\n        const { name, value } = e.target\n        setInput({ ...input, [name]: value })\n    }\n\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        oneCall()\n    }\n\n    // const oneCall = () => {\n    //     const sendCountry = countries.find(country => country.name === sourceCurrency)\n    //     setSourceCountry(sendCountry.currency.code)\n\n    //     const receiveCountry = countries.find(country => country.name === targetCurrency)\n    //     setTargetCountry(receiveCountry.currency.code)\n\n    //     console.log('pais que envía', sendCountry)\n    //     console.log('currency del que envía', sendCountry.currency.code)\n    //     console.log('pais que recibe', receiveCountry)\n    //     console.log('currency del que recibe', receiveCountry.currency.code)\n    //     console.log('input', input)\n    //     apiCall()\n    // }\n\n    const apiCall = () => {\n\n        console.log('sourcecountry', sourceCountry)\n        console.log('targetcountry', targetCountry)\n        console.log('sendamount', sendAmount)\n\n        apiService\n            .getInput(sendCountry, receiveCountry, sendAmount)\n            .then(({ data }) => {\n                setSourceCountry(data.providers)\n            })\n            .catch(err => console.log(err))\n    }\n\n\n\n    return (\n\n        <Container className='main'>\n            <article className='title' >\n                <h1>Envío de dinero al exterior</h1>\n                <img className='greenflow' src={greenflow} alt=\"testing color\" />\n                <img className='pinkflow' src={pinkflow} alt=\"testing color\" />\n                <img className='beigeflow' src={beigeflow} alt=\"testing color\" />\n            </article>\n            <hr />\n            <Container className=\"input mb-5\">\n                <Form className=\"mb-3 mt-5\" onSubmit={handleSubmit}>\n                    <FormControl\n\n                        id=\"sourcecountry\"\n                        type=\"search\"\n                        placeholder=\"Remitente\"\n                        name='sourceCurrency'\n                        aria-label=\"Search\"\n                        value={sourceCountry}\n                        onChange={handleInput}\n                    />\n                    <br />\n                    <FormControl\n                        id=\"targetCurrency\"\n                        type=\"search\"\n                        placeholder=\"Destinatario\"\n                        name='targetCurrency'\n                        aria-label=\"Search\"\n                        value={targetCountry}\n                        onChange={handleInput}\n                    />\n                    <br />\n                    <FormControl\n                        id=\"sendAmount\"\n                        type=\"number\"\n                        placeholder=\"Cantidad a enviar\"\n                        name='sendAmount'\n                        value={sendAmount}\n                        onChange={handleInput}\n                    />\n                    <br />\n                    <Button variant=\"primary\" type=\"submit\">\n                        Submit\n                    </Button>\n                </Form>\n\n\n            </Container >\n            {/* \n            {\n                !source ?\n\n                    <p>Por favor introduce lo datos</p>\n\n                    :\n                    <>\n                        <h2>Entre las distintas opciones que encontramos, te ofrecemos estas:</h2>\n                        {\n                            source?.map(provider => {\n                                const { logos, quotes } = provider\n\n                                return <>\n                                    <Row className=\"justify-content-center text-center\">\n\n                                        <Col >\n                                            <img className='logos' src={logos.normal.pngUrl} />\n                                            <p>comisión: {quotes[0].fee} {sourceCurrency}</p>\n                                        </Col>\n                                        <Col className='mt-3' >\n                                            <p>tipo de cambio: {quotes[0].rate} {targetCurrency}</p>\n                                            <p>cantidad recibida: {quotes[0].receivedAmount} {targetCurrency}</p>\n                                        </Col>\n                                    </Row>\n\n                                    <hr />\n                                </>\n                            })\n                        }\n                        <p>De momento solo tenemos estas opciones</p>\n                    </>\n            } */}\n\n\n        </Container>\n\n    )\n\n}\nexport default IndexPage"]},"metadata":{},"sourceType":"module"}