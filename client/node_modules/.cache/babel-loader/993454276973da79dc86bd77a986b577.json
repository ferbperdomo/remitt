{"ast":null,"code":"var _jsxFileName = \"/Users/cristian-perdomo/Desktop/development/remittance/client/src/context/toast.context.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { createContext, useContext, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToastStateContext = /*#__PURE__*/createContext({\n  toasts: []\n});\nconst ToastDispatchContext = /*#__PURE__*/createContext(null);\n\nfunction ToastReducer(state, action) {\n  switch (action.type) {\n    case 'ADD_TOAST':\n      {\n        return { ...state,\n          toasts: [...state.toasts, action.toast]\n        };\n      }\n\n    case 'DELETE_TOAST':\n      {\n        const updatedToasts = state.toasts.filter(e => e.id != action.id);\n        return { ...state,\n          toasts: updatedToasts\n        };\n      }\n\n    default:\n      {\n        throw new Error('unhandled action type');\n      }\n  }\n}\n\n_c = ToastReducer;\nexport function ToastProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(ToastReducer, {\n    toasts: []\n  });\n  return /*#__PURE__*/_jsxDEV(ToastStateContext.Provider, {\n    value: state,\n    children: /*#__PURE__*/_jsxDEV(ToastDispatchContext.Provider, {\n      value: dispatch,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ToastProvider, \"zl+B/8lPiE4/s5xMleiUdJ1Ith8=\");\n\n_c2 = ToastProvider;\nexport const useToastDispatchContext = () => {\n  _s2();\n\n  return useContext(ToastDispatchContext);\n};\n\n_s2(useToastDispatchContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport const useToastStateContext = () => {\n  _s3();\n\n  return useContext(ToastStateContext);\n};\n\n_s3(useToastStateContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ToastReducer\");\n$RefreshReg$(_c2, \"ToastProvider\");","map":{"version":3,"sources":["/Users/cristian-perdomo/Desktop/development/remittance/client/src/context/toast.context.jsx"],"names":["createContext","useContext","useReducer","ToastStateContext","toasts","ToastDispatchContext","ToastReducer","state","action","type","toast","updatedToasts","filter","e","id","Error","ToastProvider","children","dispatch","useToastDispatchContext","useToastStateContext"],"mappings":";;;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,UAApC,QAAsD,OAAtD;;AAEA,MAAMC,iBAAiB,gBAAGH,aAAa,CAAC;AAAEI,EAAAA,MAAM,EAAE;AAAV,CAAD,CAAvC;AACA,MAAMC,oBAAoB,gBAAGL,aAAa,CAAC,IAAD,CAA1C;;AAEA,SAASM,YAAT,CAAsBC,KAAtB,EAA6BC,MAA7B,EAAqC;AACjC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,WAAL;AAAkB;AACd,eAAO,EACH,GAAGF,KADA;AAEHH,UAAAA,MAAM,EAAE,CAAC,GAAGG,KAAK,CAACH,MAAV,EAAkBI,MAAM,CAACE,KAAzB;AAFL,SAAP;AAIH;;AACD,SAAK,cAAL;AAAqB;AACjB,cAAMC,aAAa,GAAGJ,KAAK,CAACH,MAAN,CAAaQ,MAAb,CAAqBC,CAAD,IAAOA,CAAC,CAACC,EAAF,IAAQN,MAAM,CAACM,EAA1C,CAAtB;AACA,eAAO,EACH,GAAGP,KADA;AAEHH,UAAAA,MAAM,EAAEO;AAFL,SAAP;AAIH;;AACD;AAAS;AACL,cAAM,IAAII,KAAJ,CAAU,uBAAV,CAAN;AACH;AAhBL;AAkBH;;KAnBQT,Y;AAqBT,OAAO,SAASU,aAAT,OAAqC;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AACxC,QAAM,CAACV,KAAD,EAAQW,QAAR,IAAoBhB,UAAU,CAACI,YAAD,EAAe;AAC/CF,IAAAA,MAAM,EAAE;AADuC,GAAf,CAApC;AAGA,sBACI,QAAC,iBAAD,CAAmB,QAAnB;AAA4B,IAAA,KAAK,EAAEG,KAAnC;AAAA,2BACI,QAAC,oBAAD,CAAsB,QAAtB;AAA+B,MAAA,KAAK,EAAEW,QAAtC;AAAA,gBACKD;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAXeD,a;;MAAAA,a;AAahB,OAAO,MAAMG,uBAAuB,GAAG;AAAA;;AAAA,SAAMlB,UAAU,CAACI,oBAAD,CAAhB;AAAA,CAAhC;;IAAMc,uB;;AACb,OAAO,MAAMC,oBAAoB,GAAG;AAAA;;AAAA,SAAMnB,UAAU,CAACE,iBAAD,CAAhB;AAAA,CAA7B;;IAAMiB,oB","sourcesContent":["import { createContext, useContext, useReducer } from 'react'\n\nconst ToastStateContext = createContext({ toasts: [] })\nconst ToastDispatchContext = createContext(null)\n\nfunction ToastReducer(state, action) {\n    switch (action.type) {\n        case 'ADD_TOAST': {\n            return {\n                ...state,\n                toasts: [...state.toasts, action.toast],\n            }\n        }\n        case 'DELETE_TOAST': {\n            const updatedToasts = state.toasts.filter((e) => e.id != action.id)\n            return {\n                ...state,\n                toasts: updatedToasts,\n            }\n        }\n        default: {\n            throw new Error('unhandled action type')\n        }\n    }\n}\n\nexport function ToastProvider({ children }) {\n    const [state, dispatch] = useReducer(ToastReducer, {\n        toasts: [],\n    })\n    return (\n        <ToastStateContext.Provider value={state}>\n            <ToastDispatchContext.Provider value={dispatch}>\n                {children}\n            </ToastDispatchContext.Provider>\n        </ToastStateContext.Provider>\n    )\n}\n\nexport const useToastDispatchContext = () => useContext(ToastDispatchContext)\nexport const useToastStateContext = () => useContext(ToastStateContext)"]},"metadata":{},"sourceType":"module"}